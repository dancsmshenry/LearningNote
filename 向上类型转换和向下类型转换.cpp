#include <iostream>

using namespace std;

int main(){
    /**
     * 从大小上看，派生类是大于基类的
     * ps:安不安全是基于指针的寻址范围的/强转是指指针发生变化，实体对象不变
     * 所以基类强转为派生类是不安全的，即为向下类型转换
     * （基类的寻址范围更加小，而派生类的指针寻址范围更大，则会导致指针越界，因为本来的对象的寻址就没新的派生指针那么大）
     * 而派生类转为基类是安全的，即为向上类型转换
     * （派生类的寻址范围更大，转为基类指针后指针寻址范围变小，即指针不存在越界的情况）
     * 而如果发生了多态，总是安全的
     * 如：Animal *animal = new Cat();
     * 这里Animal是基类，Cat是派生类，虽然声明的是一个animal指针，但是开空间的时候是开一个Cat的大小
     * Cat *cat = (Cat *) animal;//这里把animal强转为cat也是安全的，因为它的大小本来就足够嘛
     **/ 
}